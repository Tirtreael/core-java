apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'application'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava {
    options.compilerArgs += ["--enable-preview"]
}

tasks.withType(JavaCompile).all {
    options.compilerArgs += ['--enable-preview']
}

tasks.withType(Test).all {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

javadoc {
    options.addBooleanOption('html5', true)
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addBooleanOption('-enable-preview', true)
    options.addStringOption('-release', '19')
}

task javadocsJar(type: Jar, dependsOn: javadoc, description: 'Creates a jar from the javadocs files.') {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task functionsJar(type: Jar, dependsOn: classes,
        description: 'Creates a jar from the org.ignis.executor.api.functions classes.') {
    archiveClassifier.set('testFunctions')
    from sourceSets.main.output
    include 'org/ignis/executor/api/functions/**'
}

task minebenchJar(type: Jar, dependsOn: classes,
        description: 'Creates a jar from the org.ignis.driver.minebench classes.') {
    archiveClassifier.set('minebenchFunctions')
    from sourceSets.main.output
    include 'org/ignis/driver/minebench/**'
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocsJar
    archives functionsJar
}

archivesBaseName = 'ignis-core-java'
version = '1.0'
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.ignis'
            artifactId = archivesBaseName
            version = version
            from components.java
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.thrift', name: 'libthrift', version: '0.15.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.0'
    implementation group: 'org.json', name: 'json', version: '20230227'
    implementation group: 'org.openjdk.jol', name: 'jol-core', version: '0.10'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

task jarAndLibs(type: Copy, description: 'Copy project dependencies.') {
    dependsOn "jar"
    dependsOn "functionsJar"
    dependsOn "minebenchJar"
    delete("$buildDir/libs")
    from project.configurations.runtimeClasspath
    into "$buildDir/libs"
}
sourceCompatibility = JavaVersion.VERSION_19
targetCompatibility = JavaVersion.VERSION_19
